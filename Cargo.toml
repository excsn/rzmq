[package]
name = "rzmq"
version = "0.1.0"
edition = "2021"
publish = true

description = "Placeholder for Xtreme High Performance Implementation of ZeroMQ"
authors = ["Excerion Sun <dev@excsn.com>", "Norm O <normo.pub@gmail.com>"]
readme = "README.md"
repository = "https://github.com/excsn/rzmq"
homepage = "https://github.com/excsn/rzmq"
license = "MPL-2.0"

[dependencies]
url = "2.5.4"
radix_trie = "^0.2.1"

# --- Core Async Runtime & Concurrency ---
async-channel = "^1.8"
async-trait = "^0.1.88"
async-recursion = "^1.0"
tokio = { version = "^1", features = ["fs", "rt", "rt-multi-thread", "macros", "sync", "net", "time", "io-util"] }
tokio-util = { version = "^0.7", features = ["codec"] }
futures = "^0.3" # General async utilities
crossbeam-channel = { version = "^0.5", optional = true } # Optional for specific channel needss

# --- I/O & Buffers ---
bytes = "1.4" # Efficient byte buffer handling
mio = { version = "^0.8", features = ["os-poll", "net"], optional = true } # For mio-poll feature (epoll, kqueue, IOCP)
tokio-uring = { version = "^0.5", optional = true } # For io-uring feature

# --- Utilities ---
tracing = "^0.1"
rand = "^0.9"
libc = { version = "^0.2", optional = true } # For OS constants/types if needed (e.g., socket options)
bitflags = "^2.4"

# --- Error Handling ---
thiserror = "^1.0"
static_assertions = "^1.1.0"

socket2 = "^0"

nix = { version = "^0.27", features = ["net"], optional = true }

libsodium-rs = { version = "^0", optional = true }

# --- Platform Specific (if mio doesn't cover everything) ---
# Example: Add specific windows deps if needed beyond mio
# [target.'cfg(windows)'.dependencies]
# windows-sys = { version = "0.48", features = ["Win32_Networking_WinSock", ...] }

[dev-dependencies]
# For benchmarks
anyhow = "^1"
criterion = { version = "0.5", features = ["async_tokio"] }
serial_test = "^3"
# For integration tests
tokio-test = "^0.4"
# For concurrency testing
# loom = { version = "0.6", optional = true }

# For fuzzing tests
# cargo-fuzz = { version = "0.11", optional = true }
tracing-subscriber = { version = "^0.3", features = ["env-filter"] } # Optional for easy logging setup

[[bench]]
name = "throughput"
harness = false

[features]
full = ["default", "ipc", "inproc", "curve"]
# --- Default Poller ---
# By default, we enable mio-poll which uses epoll/kqueue/IOCP via mio.
# On Linux, users can opt-in to io-uring explicitly.
default = ["mio-poll", "ipc", "inproc"]

# --- Poller Implementations ---
# Select ONE poller implementation via features. Default is mio-poll.
io-uring = ["dep:tokio-uring", "dep:libc"] # io_uring often needs libc extras
mio-poll = ["dep:mio", "dep:libc"]         # mio might also pull in libc details depending on usage

ipc = ["dep:nix"]
inproc = []
# tls = ["dep:rustls", "dep:tokio-rustls"] # Example for later WSS
curve = ["dep:libsodium-rs"]
# gssapi = ["dep:libgssapi-sys"]
# websocket = ["dep:tokio-tungstenite", "tls"] # WS depends on TLS feature for WSS
# tipc = [] # Feature flag for TIPC transport
# draft = [] # Enables DRAFT API sockets and options

# --- Testing Features ---
# fuzz = ["cargo-fuzz"]
# concurrency-test = ["loom"]

# --- C API Compatibility Layer ---
# capi = []